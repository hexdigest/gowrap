// Code generated by gowrap. DO NOT EDIT.
// template: ../templates/interceptor
// gowrap: http://github.com/hexdigest/gowrap

package templatestests

import "context"

//go:generate gowrap gen -p github.com/hexdigest/gowrap/templates_tests -i TestInterface -t ../templates/interceptor -o interface_with_interceptor.go -l ""

// InterceptorTestInterface implements TestInterface interceptor
type InterceptorTestInterface struct {
	_base                            TestInterface
	InterceptorFuncChannels          func(chA chan bool, chB chan<- bool, chanC <-chan bool)
	InterceptorFuncContextNoError    func(ctx context.Context, a1 string, a2 string)
	InterceptorFuncF                 func(ctx context.Context, a1 string, a2 ...string) (result1 string, result2 string, err error)
	InterceptorFuncNoError           func(s1 string) (s2 string)
	InterceptorFuncNoParamsOrResults func()
}

// NewInterceptorTestInterface is an interceptor implementation of the TestInterface
func NewInterceptorTestInterface(base TestInterface) *InterceptorTestInterface {
	return &InterceptorTestInterface{
		_base: base,
	}
}

// Channels intercepts TestInterface.Channels
func (_d *InterceptorTestInterface) Channels(chA chan bool, chB chan<- bool, chanC <-chan bool) {
	if _d.InterceptorFuncChannels != nil {
		_d.InterceptorFuncChannels(chA, chB, chanC)
		return
	}
	_d._base.Channels(chA, chB, chanC)
	return
}

// ContextNoError intercepts TestInterface.ContextNoError
func (_d *InterceptorTestInterface) ContextNoError(ctx context.Context, a1 string, a2 string) {
	if _d.InterceptorFuncContextNoError != nil {
		_d.InterceptorFuncContextNoError(ctx, a1, a2)
		return
	}
	_d._base.ContextNoError(ctx, a1, a2)
	return
}

// F intercepts TestInterface.F
func (_d *InterceptorTestInterface) F(ctx context.Context, a1 string, a2 ...string) (result1 string, result2 string, err error) {
	if _d.InterceptorFuncF != nil {
		return _d.InterceptorFuncF(ctx, a1, a2...)
	}
	return _d._base.F(ctx, a1, a2...)
}

// NoError intercepts TestInterface.NoError
func (_d *InterceptorTestInterface) NoError(s1 string) (s2 string) {
	if _d.InterceptorFuncNoError != nil {
		return _d.InterceptorFuncNoError(s1)
	}
	return _d._base.NoError(s1)
}

// NoParamsOrResults intercepts TestInterface.NoParamsOrResults
func (_d *InterceptorTestInterface) NoParamsOrResults() {
	if _d.InterceptorFuncNoParamsOrResults != nil {
		_d.InterceptorFuncNoParamsOrResults()
		return
	}
	_d._base.NoParamsOrResults()
	return
}
