package templatestests

// Code generated by gowrap. DO NOT EDIT.
// template: ../templates/elastic_apm
// gowrap: http://github.com/hexdigest/gowrap

//go:generate gowrap gen -p github.com/hexdigest/gowrap/templates_tests -i TestInterface -t ../templates/elastic_apm -o interface_with_elastic_apm.go -l ""

import (
	"context"

	"go.elastic.co/apm/v2"
)

// TestInterfaceWithAPMTracing implements TestInterface interface instrumented with elastic apm spans
type TestInterfaceWithAPMTracing struct {
	TestInterface
	_spanType string
}

// NewTestInterfaceWithAPMTracing returns TestInterfaceWithAPMTracing
func NewTestInterfaceWithAPMTracing(base TestInterface, spanType string) TestInterfaceWithAPMTracing {
	return TestInterfaceWithAPMTracing{
		TestInterface: base,
		_spanType:     spanType,
	}
}

// ContextNoError implements TestInterface
func (_d TestInterfaceWithAPMTracing) ContextNoError(ctx context.Context, a1 string, a2 string) {
	span, ctx := apm.StartSpan(ctx, "TestInterface.ContextNoError", _d._spanType)
	defer func() {
		span.End()
	}()
	_d.TestInterface.ContextNoError(ctx, a1, a2)
	return
}

// F implements TestInterface
func (_d TestInterfaceWithAPMTracing) F(ctx context.Context, a1 string, a2 ...string) (result1 string, result2 string, err error) {
	span, ctx := apm.StartSpan(ctx, "TestInterface.F", _d._spanType)
	defer func() {
		if err != nil {
			apm.CaptureError(ctx, err).Send()
		}

		span.End()
	}()
	return _d.TestInterface.F(ctx, a1, a2...)
}
